// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCinebook.ScheduleData;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyCinebook.ScheduleData.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    [Migration("20250414100715_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyCinebook.ScheduleData.Models.ScheduledShow", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("ID");

                    b.ToTable("ScheduledShow");
                });

            modelBuilder.Entity("MyCinebook.ScheduleData.Models.ScheduledShowSeat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("ScheduledShowID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ScheduledShowID");

                    b.ToTable("ScheduledShowSeat");
                });

            modelBuilder.Entity("MyCinebook.ScheduleData.Models.ScheduledShowSeat", b =>
                {
                    b.HasOne("MyCinebook.ScheduleData.Models.ScheduledShow", "ScheduledShow")
                        .WithMany("Seats")
                        .HasForeignKey("ScheduledShowID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduledShow");
                });

            modelBuilder.Entity("MyCinebook.ScheduleData.Models.ScheduledShow", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
