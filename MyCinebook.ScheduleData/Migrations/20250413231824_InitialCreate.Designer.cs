// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCinebook.ScheduleData;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyCinebook.ScheduleData.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    [Migration("20250413231824_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyCinebook.ScheduleData.ScheduleSeatModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<char>("Line")
                        .HasColumnType("character(1)");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int?>("ScheduleShowModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleShowModelId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("MyCinebook.ScheduleData.ScheduleShowModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("MyCinebook.ScheduleData.ScheduleSeatModel", b =>
                {
                    b.HasOne("MyCinebook.ScheduleData.ScheduleShowModel", null)
                        .WithMany("Seats")
                        .HasForeignKey("ScheduleShowModelId");
                });

            modelBuilder.Entity("MyCinebook.ScheduleData.ScheduleShowModel", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
